dist: trusty

<<<<<<< HEAD
language: python
python:
  # We don't actually use the Travis Python, but this keeps it organized.
  - "2.7"
  - "3.6"
install:
  - sudo apt-get update
  # You may want to periodically update this, although the conda update
  # conda line below will keep everything up-to-date.  We do this
  # conditionally because it saves us some downloading if the version is
  # the same.
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      wget http://repo.continuum.io/miniconda/Miniconda2-4.3.31-Linux-x86_64.sh -O miniconda.sh;
    else
      wget http://repo.continuum.io/miniconda/Miniconda3-4.3.31-Linux-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda info -a

  # Replace dep1 dep2 ... with your dependencies
  - conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION
  - source activate test-environment

script:
  - conda install -c maxibor adapterremoval2
  - AdapterRemoval --help
=======
compiler:
  - clang
  - gcc

os:
 - linux
 - osx

addons:
  apt:
    packages:
      - zlib1g-dev
      - libbz2-dev
      - python3
      - python3-pip

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then python3 -m pip install --user cpp-coveralls; fi

install: true

script:
    - make
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then make test COVERAGE=yes; fi
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then make test COVERAGE=no; fi
    - make regression
    - PATH=$PATH:$PWD/build/ make -C examples

after_success:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then python3 -m coveralls --exclude tests --gcov-options '\-lp'; fi
>>>>>>> dbfdf00ba697b23bb7a3c3ce263d3b154d4dcda7
